<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="house">
	<sql id="order-list">
		<if test="orderList == 'costH'">
			ORDER BY cost DESC
		</if>
		<if test="orderList == 'costL'">
			ORDER BY cost ASC
		</if>
	</sql>
	<sql id="where-list">
		<if test = "searchKey == 'name'">
			name = #{searchValue}
		</if>
		<if test="searchKey == 'subject'">
			subject LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchKey == 'content'">
			INSTR(content, #{searchValue}) &gt; 0
		</if>
		<if test="searchKey == 'created'">
			TO_CHAR(created, 'YYYY-MM-DD') = #{searchValue}
	          OR TO_CHAR(created, 'YYYYMMDD') = #{searchValue}
		</if>
		<if test="searchValue == 'main'">
			
		</if>
	</sql>
	<insert id="insertHouseInfo" parameterType="com.pet.house.House">
		INSERT INTO host (hostNum, address, cost, capacity, search_On, subject, content)
		VALUES(#{hostNum}, #{address}, #{cost}, #{capacity}, #{searchOn, jdbcType=VARCHAR}, #{subject}, #{content})
	</insert>
	
	<insert id="insertHousePic" parameterType="com.pet.house.House">
		INSERT INTO hostHousePic (picNum, saveFilename, hostNum)
		VALUES(hostHousePic_seq.NEXTVAL, #{saveFilename}, #{hostNum})
	</insert>
	<insert id="insertHostPetInfo" parameterType="com.pet.house.House">
		INSERT INTO hostPetInfo (num, species, hostNum)
		VALUES(hostPetInfo_seq.NEXTVAL, #{species}, #{hostNum})
	</insert>
	<!-- Mapper 수정 필요  
	-->
	
	<!-- 글 개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM host 
		<where>
			<if test="searchValue != null and searchValue != ''">
			  		<include refid="where-list"/>
		    </if>
		</where>
	</select>
	
	<!-- 글 리스트 -->
	<select id="listHouse" parameterType="map" resultType="com.pet.house.House">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* , (select NVL(count(reviewnum),0) from hostreview rv WHERE tb.hostNum = rv.hostNum ) as reviewcnt FROM (
			     SELECT hostNum, address, cost, capacity, subject, content, userName, profile,TO_CHAR(h.created,'YYYY-MM-DD') created 
			     FROM host h JOIN member m ON h.hostNum=m.num
			  <where>
              	<if test="searchValue != null and searchValue != ''">
			  		<include refid="where-list"/>
		      	</if>
	          </where>
	          	<if test="orderList !=null and orderList != ''">
	        		<include refid="order-list"/>
	        	</if>
	        	<if test="orderList ==null or orderList == ''">
              		  ORDER BY created DESC
              	</if>
    <![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
	]]>	    
	</select>
	<!-- 첫번째 보여줄 사진 -->
	<select id="housePhoto" resultType="com.pet.house.House" parameterType="Integer">
		SELECT tb1.* FROM( 
				SELECT saveFilename FROM hostHousePic
			     	WHERE hostNum=#{hostNum}
			     ORDER BY picNum
			 <![CDATA[
			 )tb1 WHERE ROWNUM=1
			 ]]>			 
	</select>
	
	<!-- 글보기 -->
	<select id="readHouseinfo" resultType="com.pet.house.House" parameterType="Integer">
		SELECT hostNum, userName, profile, address, capacity, cost, subject, content, TO_CHAR(h.created,'YYYY-MM-DD') created
		FROM host h JOIN member m ON h.hostNum=m.num
		WHERE hostNum=#{hostNum}
	</select>	
	<!-- 사진글보기 -->
	<select id="readHousePhoto" resultType="com.pet.house.House" parameterType="Integer">
		SELECT picNum, saveFilename, hostNum
		FROM hostHousePic
		WHERE hostNum=#{hostNum}
	</select>
	
	<!-- 댓글(리뷰) -->
	<insert id="insertReview" parameterType="com.pet.house.Review">
		INSERT INTO hostreview(reviewNum, content, hostNum, completeNum, score)
		VALUES (hostReview_seq.NEXTVAL, #{content}, #{hostNum}, #{completeNum}, #{score}) 
	
	</insert>	
	
	<select id="reviewDataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*), 0) FROM hostreview WHERE hostNum=#{hostNum}
	</select>
	
	<select id="listReview" parameterType="map" resultType="com.pet.house.Review">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (	   
				SELECT reviewnum, r.hostNum, r.num, m.profile, userName, h.created, content, c.completeNum
				FROM hostreview h JOIN reserComplete c ON h.completeNum=c.completeNum JOIN reservation r ON c.reservationNum = r.reservationNum JOIN member m ON r.num=m.num
				WHERE h.hostNum=#{hostNum}
				ORDER BY h.hostNum DESC
	    <![CDATA[
		        ) tb WHERE ROWNUM <= #{end}
		    ) WHERE rnum >= #{start}
		]]>	     
	</select>
	
	<!--댓글 글보기 -->
	<select id="readReview" resultType="com.pet.house.Review" parameterType="map">
	 SELECT r.completeNum, r.reservationNum, price, num, t.hostNum FROM resercomplete r JOIN reservation n ON r.reservationNum=n.reservationNum
     LEFT OUTER JOIN hostReview h ON r.completeNum=h.completeNum  LEFT OUTER JOIN host t ON t.hostNum=n.hostNum
		WHERE t.hostNum=#{hostNum} AND num=#{num}
	</select>
	
	<delete id="deleteReview" parameterType="Integer">
		DELETE FROM hostreview
		WHERE reviewnum=#{reviewnum}
	</delete>
	
	<select id="listGrade" parameterType="map" resultType="com.pet.house.Review">
		SELECT * FROM grade;
	</select>
	
	<select id="hostCheck" parameterType="Integer" resultType="Integer">
	   SELECT COUNT(*) FROM host 
	   WHERE hostNum=#{memberNum}
	</select>
</mapper>