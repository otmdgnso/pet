<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="message">
	<sql id="where-list">
	  <if test="searchKey=='sendUserId' or searchKey=='receiveUserId'">
	      ${searchKey}=#{searchValue}
	  </if>
	  <if test="searchKey=='content'">
	      INSTR(content, #{searchValue}) &gt; 0
	  </if>
	  <if test="searchKey=='subject'">
	      INSTR(subject, #{searchValue}) &gt; 0
	  </if>
	</sql>

	<insert id="insertMessage" parameterType="com.pet.message.Message">
		INSERT INTO message(messageNum, sendUserId,receiveUserId,subject,
		content,sendCreated,confirmCreated,sendDelete,receiveDelete)
		VALUES(message_seq.NEXTVAL, #{sendUserId}, #{receiveUserId}, #{subject}, 
		#{content}, SYSDATE, #{confirmCreated, jdbcType=VARCHAR}, 'N', 'N')
	</insert>
	
	<!-- 받은 메시지 리스트 -->
	<select id="dataCountReceive" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM message
		<where>
			<if test="searchValue!=null and searchValue!='' ">
				<include refid="where-list"/>
			</if>
			AND receiveUserId = #{userId}
			AND receiveDelete='N'
		</where>
	</select>
	
	<select id="listReceive" parameterType="map" resultType="com.pet.message.Message">
	SELECT * FROM (
		SELECT ROWNUM rnum, tb.* FROM (
          SELECT messageNum, subject, content, sendUserId, 
          TO_CHAR(sendCreated,'YYYY-MM-DD HH24:MI:SS') sendCreated, 
          NVL2(confirmCreated,TO_CHAR(confirmCreated,'YYYY-MM-DD HH24:MI:SS'), null) confirmCreated, 
          receiveDelete FROM message
          	<where>
          		<if test="searchValue!=null and searchValue!='' ">
	     	    	<include refid="where-list"/>
	     	    </if>
	     	    AND receiveUserId = #{userId}
	     	    AND receiveDelete='N'
          	</where>
          ORDER BY messageNum DESC
    <![CDATA[
      	) tb WHERE ROWNUM <= #{end}
	) WHERE rnum >= #{start}
	]]>
	</select>
	
	<!-- 받은 메시지 리스트 -->
	<select id="dataCountSend" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM message
		<where>
			<if test="searchValue!=null and searchValue=''">
				<include refid="where-list"/>
			</if>
			AND sendUserId = #{userId}
			AND sendDelete='N'
		</where>
	</select>
	
	<select id="listSend" parameterType="map" resultType="com.pet.message.Message">
	SELECT * FROM (
		SELECT ROWNUM rnum, tb.* FROM (
          SELECT messageNum, subject, content, receiveUserId, 
          TO_CHAR(sendCreated,'YYYY-MM-DD HH24:MI:SS') sendCreated, 
          NVL2(confirmCreated,TO_CHAR(confirmCreated,'YYYY-MM-DD HH24:MI:SS'), null) confirmCreated, 
          sendDelete FROM message
          	<where>
          		<if test="searchValue!=null and searchValue!='' ">
	     	    	<include refid="where-list"/>
	     	    </if>
	     	    AND sendUserId = #{userId}
	     	    AND sendDelete='N'
          	</where>
          ORDER BY messageNum DESC
    <![CDATA[
      	) tb WHERE ROWNUM <= #{end}
	) WHERE rnum >= #{start}
	]]>
	</select>

	<select id="readMessage" parameterType="Integer" resultType="com.pet.message.Message">
	SELECT messageNum, sendUserId, receiveUserId, subject, content, sendCreated
	FROM message WHERE messageNum=#{messageNum}
	</select>
	
	<!-- 쪽지 삭제 상태를 Y로 변경(업데이트) -->
	<update id="updateDeleteState" parameterType="map">
		UPDATE message SET ${field1} = 'Y' WHERE messageNum IN
		<foreach item="messageNum" index="index" collection="messageNumList"
					open="(" separator="," close=")">
		#{messageNum}
		</foreach>
	</update>
	
	<!-- 쪽지 삭제상태가 모두 Y면 DB에서 삭제 -->
	<delete id="deleteMessage" parameterType="map">
		DELETE FROM message WHERE ${field2} = 'Y' AND messageNum IN
		<foreach item="messageNum" index="index" collection="messageNumList"
					open="(" separator="," close=")">
		#{messageNum}
		</foreach>
	</delete>
	
	<!-- 메시지를 확인 상태로 변경 -->
	<update id="updateConfirmCreated" parameterType="Integer">
	UPDATE message SET confirmCreated= SYSDATE
		WHERE messageNum=#{messageNum} AND confirmCreated IS NULL
	</update>
	
	<select id="userIdCheck" parameterType="String" resultType="Integer">
	SELECT NVL(COUNT(*),0) FROM member
	WHERE userId=#{userId}
	</select>
	
	
	
	
	
</mapper>