<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adopt">

	<sql id="order-list">
		<if test="orderList == 'priceH'">
		ORDER BY price DESC
		</if>
		<if test="orderList == 'priceL'">
		ORDER BY price ASC
		</if>
		<if test="orderList == 'hitCount'">
		ORDER BY hitCount DESC
		</if>
	</sql>

	<sql id="where-list">
		<if test = "searchKey == 'species'">
			species = #{searchValue}
		</if>
		<if test="searchKey == 'subject'">
			subject LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchKey == 'content'">
			INSTR(content, #{searchValue}) &gt; 0
		</if>
		<if test="searchKey == 'created'">
			TO_CHAR(created, 'YYYY-MM-DD') = #{searchValue}
	          OR TO_CHAR(created, 'YYYYMMDD') = #{searchValue}
		</if>
		<if test="searchValue == 'main'">
		species=#{species}
		AND type=#{type}
		AND price BETWEEN #{minPrice} AND #{maxPrice}
		</if>
	</sql>
	
	<select id="seq" resultType="Integer">
		SELECT preSale_seq.NEXTVAL FROM dual
	</select>
	
	<insert id="insertPreSale" parameterType="com.pet.adopt.Adopt">
		INSERT INTO preSale (preSaleNum, subject, content, species, type, gender,
		lineage, month, price, deposit, vaccin, num)
		VALUES(#{preSaleNum},#{subject},#{content},#{species},#{type},
		#{gender},#{lineage},#{month},#{price},#{deposit},#{vaccin},#{num})
	</insert>
	
	<insert id="insertPreSalePhoto" parameterType="com.pet.adopt.Adopt">
		INSERT INTO PreSalePhoto(photoNum, saveFilename, preSaleNum)
		VALUES(preSalePhoto_seq.NEXTVAL,#{saveFilename},#{preSaleNum})
	</insert>

	<select id="dataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0) FROM preSale p
		LEFT OUTER JOIN
             (
              SELECT preSaleNum, COUNT(*) replyCount FROM preSaleReply
              GROUP BY preSaleNum
             )r ON r.PreSaleNum=p.preSaleNum
		<where>
          <if test="searchValue != null and searchValue != '' ">
			   <include refid="where-list"/>
		   </if>
	   </where>
	</select>

	<select id="listPreSale" resultType="com.pet.adopt.Adopt" parameterType="map">
	SELECT * FROM (
  		SELECT ROWNUM rnum, tb.* FROM (
    		SELECT p.preSaleNum, subject, userId
    		, hitCount, TO_CHAR(p.created,'YYYY-MM-DD') created, type,price,species, replyCount
    		FROM preSale p JOIN
    		member m ON p.num=m.num
    		LEFT OUTER JOIN
             (
              SELECT preSaleNum, COUNT(*) replyCount FROM preSaleReply
              GROUP BY preSaleNum
             )r ON r.PreSaleNum=p.preSaleNum
    		 <where>
                         <if test="searchValue != null and searchValue != ''">
			                  <include refid="where-list"/>
		                 </if>
	                </where>
	                
	        	<if test="orderList !=null and orderList != ''">
	        		<include refid="order-list"/>
	        	</if>
	        	<if test="orderList ==null or orderList == ''">
	        	ORDER BY preSaleNum DESC
	        	</if>

   	<![CDATA[
  		) tb WHERE ROWNUM <= #{end}
	) WHERE rnum >= #{start}
	]]>
	</select>

	<select id="listPhoto" resultType="com.pet.adopt.Adopt" parameterType="Integer">
	SELECT tb1. * FROM(
  		SELECT saveFilename
  		FROM preSalePhoto
  		WHERE  preSaleNum=#{preSaleNum}
  		ORDER BY photoNum
  	<![CDATA[
  	)tb1 WHERE ROWNUM =1
  	]]>
	</select>

	<select id="readPreSale" resultType="com.pet.adopt.Adopt" parameterType="Integer">
	SELECT preSaleNum, subject, userId, content, 
  		TO_CHAR(p.created, 'YYYY-MM-DD') created, 
  		species, type, gender, lineAge, month, price, 
  		deposit, vaccin, p.num, hitCount
	FROM preSale p JOIN member m ON p.num=m.num
	WHERE preSaleNum=#{preSaleNum}
	</select>
	
	<select id="readPreFile" parameterType="Integer" resultType="com.pet.adopt.Adopt">
	SELECT photoNum, saveFilename, preSaleNum
	FROM preSalePhoto
	WHERE preSaleNum=#{preSaleNum}
	</select>

	<update id="preUpdateHitCount" parameterType="Integer">
	UPDATE preSale SET hitCount=hitCount+1
 	WHERE preSaleNum=#{preSaleNum}
	</update>
	
	<delete id="deletePreSale" parameterType="Integer">
	DELETE FROM preSale WHERE preSaleNum=#{preSaleNum}
	</delete>

	<update id="updatePreSale" parameterType="com.pet.adopt.Adopt">
		UPDATE preSale SET subject=#{subject}, content=#{content},
		species=#{species}, type=#{type}, gender=#{gender}, lineage=#{lineage},
		month=#{month}, price=#{price}, deposit=#{deposit}, vaccin=#{vaccin}
		WHERE preSaleNum=#{preSaleNum}
	</update>

	<delete id="deletePreFile" parameterType="String">
		DELETE FROM preSalePhoto WHERE saveFilename=#{saveFilename}
	</delete>

	<!-- 댓글 ................. -->
	
	<insert id="insertPreReply" parameterType="com.pet.adopt.Reply">
	INSERT INTO preSaleReply(replyNum, preSaleNum, num, content)
	VALUES (preSaleReply_seq.NEXTVAL,#{preSaleNum},#{num},#{content})
	</insert>
	
	<select id="dataCountPreReply" resultType="Integer"
			parameterType="map">
	SELECT NVL(COUNT(*),0)
		FROM preSaleReply WHERE preSaleNum=#{preSaleNum}
	</select>
	
	<select id="listPreReply" resultType="com.pet.adopt.Reply"
			parameterType="map">
	SELECT * FROM(
		SELECT ROWNUM rnum, tb.* FROM(
			SELECT replyNum, preSaleNum, pr.num, userId, content, 
			TO_CHAR(pr.created,'YYYY-MM-DD HH24:MI:SS') created
			FROM preSaleReply pr JOIN member m ON pr.num=m.num
      		WHERE preSaleNum=#{preSaleNum}
      		ORDER BY replyNum DESC
    <![CDATA[
		) tb WHERE ROWNUM <= #{end}
	) WHERE rnum >= #{start}
	]]>
	</select>
	
	<delete id="deletePreReply" parameterType="Integer">
	DELETE preSaleReply WHERE replyNum=#{replyNum}
	</delete>
	
	
	
	

</mapper>